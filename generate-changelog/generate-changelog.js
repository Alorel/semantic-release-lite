!function(e){"use strict";const t=e("../_common/output-mgr.js"),s=e("../_common/common-config.js"),o=e("../_common/input-mgr.js"),n=e("../_common/semver.js"),r=e("../_common/sync-check.js");e("child_process"),e("os"),e("crypto"),e("fs"),e("path"),e("http"),e("https"),e("net"),e("tls"),e("events"),e("assert"),e("util"),e("stream"),e("buffer"),e("querystring"),e("stream/web"),e("node:stream"),e("node:util"),e("node:events"),e("worker_threads"),e("perf_hooks"),e("util/types"),e("async_hooks"),e("console"),e("url"),e("zlib"),e("string_decoder"),e("diagnostics_channel"),e("timers"),e("../_common/github.js");const c=t.OutputMgr;(async function(){const e=new s.TypesInputParser,a=new o.InputMgrImpl({...s.commonConfigInit(e),from:String,"last-tag"(){const e=t.coreExports.getInput("last-tag");if(e)return n.SemVer.parse(e)},until:String});a.load();const i=new s.CommitLoader({breakingChangeKeywords:a["breaking-change-keywords"],from:a.from,until:a.until});await i.load();const l=new c;l.set("commit-count",i.totalCount),l.set("relevant-commit-count",i.relevantCount);const m=new s.CommitParser(i,e,a);m.parse(),m.hasIssuesClosed?l.set("issues-closed",[...m.issuesClosed()].join(",")):t.coreExports.debug("No issues closed");const u=new s.ChangelogGenerator(m,e,a);await u.generate(a["last-tag"]),l.set("release-type",u.nextVersion.computeReleaseType(a["last-tag"])),l.set("next-version",u.nextVersion.toString()),l.set("changelog",u.result);try{await r.OutOfSyncError.check(),l.set("in-sync",!0)}catch{}l.get("release-type")&&l.has("in-sync")&&l.set("should-release",!0),l.log().flush()})().catch((e=>{t.coreExports.setFailed(e.message)}))}(require,Reflect,console,0,Error,JSON,Math,process,TypeError,0,Symbol);
