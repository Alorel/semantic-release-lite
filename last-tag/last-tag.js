!function(e,r,t,s,o){"use strict";const n=e("../_common/output-mgr.js"),a=e("../_common/input-mgr.js"),i=e("../_common/semver.js");e("child_process"),e("os"),e("crypto"),e("fs"),e("path"),e("http"),e("https"),e("net"),e("tls"),e("events"),e("assert"),e("util"),e("stream"),e("buffer"),e("querystring"),e("stream/web"),e("node:stream"),e("node:util"),e("node:events"),e("worker_threads"),e("perf_hooks"),e("util/types"),e("async_hooks"),e("console"),e("url"),e("zlib"),e("string_decoder"),e("diagnostics_channel"),e("timers"),async function(){function e(e){return function(){const r=n.coreExports.getInput(e);if(!r)return;const t=i.SemVer.parse(r);if(t)return t;throw new o("Invalid SemVer string")}}const r=new a.InputMgrImpl({after:e("after"),before:e("before")});r.load();let t=await i.SemVer.resolveReleases();r.after?t=r.before?t.filter((e=>e.isGreaterThan(r.after)&&e.isLowerThan(r.before))):t.filter((e=>e.isGreaterThan(r.after))):r.before&&(t=t.filter((e=>e.isLowerThan(r.before))));const s=t[0];s?(new n.OutputMgr).set("last-tag",s.toString()).log().flush():n.coreExports.info("No release tags found")}().catch((e=>{n.coreExports.setFailed(n.coreExports.isDebug()?e.stack??e.message:e.message)}))}(require,Reflect,console,0,Error,JSON,Math,process,TypeError,0,Symbol);
