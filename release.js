!function(e){"use strict";const t=e("./_common/output-mgr.js"),s=e("./_common/common-config.js"),o=e("./_common/input-mgr.js"),n=e("./_common/sync-check.js"),r=e("./_common/semver.js");e("child_process"),e("os"),e("crypto"),e("fs"),e("path"),e("http"),e("https"),e("net"),e("tls"),e("events"),e("assert"),e("util"),e("stream"),e("buffer"),e("querystring"),e("stream/web"),e("node:stream"),e("node:util"),e("node:events"),e("worker_threads"),e("perf_hooks"),e("util/types"),e("async_hooks"),e("console"),e("url"),e("zlib"),e("string_decoder"),e("diagnostics_channel"),e("timers"),e("./_common/github.js");class c extends t.OutputMgr{log(){let e;for(const[t,s]of this)"changelog"===t?e=s:this.logOne(t,s);return e&&t.coreExports.info(`changelog:\n=====================\n${e}`),this}*virtualIter(){this.has("release-type","in-sync")&&(yield["should-release",!0]);const e=this.has("next-version")&&r.SemVer.parse(this.get("next-version"));e&&(yield["next-version-major",e.major],yield["next-version-minor",e.minor],yield["next-version-patch",e.patch])}}t.__decorate([t.OutputGroup("Outputs")],c.prototype,"log",null),async function(){const e=new s.TypesInputParser,a=new o.InputMgrImpl(s.commonConfigInit(e));a.load();const i=new c,l=await r.SemVer.resolveLastRelease();i.set("last-tag",l?.toString());const m=new s.CommitLoader(l);await m.load(),i.set("commit-count",m.totalCount),i.set("relevant-commit-count",m.relevantCount);const u=new s.CommitParser(m,e,a);u.parse(),u.hasIssuesClosed?i.set("issues-closed",[...u.issuesClosed()].join(",")):t.coreExports.debug("No issues closed");const p=new s.ChangelogGenerator(u,e,a);await p.generate(l),i.set("release-type",p.nextVersion.computeReleaseType(l)),i.set("next-version",p.nextVersion.toString()),i.set("changelog",p.result);try{await n.OutOfSyncError.check(),i.set("in-sync",!0)}catch{}i.log().flush()}().catch((e=>{t.coreExports.setFailed(t.coreExports.isDebug()?e.stack??e.message:e.message)}))}(require,Reflect,console,0,Error,JSON,Math,process,TypeError,0,Symbol);
